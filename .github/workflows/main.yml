name: AI Docs Update

on:
  # Run on PRs to main and on pushes to non-main branches
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]
    branches:
      - main
  push:
    branches-ignore:
      - main

permissions:                     # Extra scopes for writing to the repo
  contents: write
  pull-requests: write
  models: read

jobs:
  generate-docs:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with: { fetch-depth: 0 }

      # 1️⃣ Create a unified diff between base and head
      - name: Generate diff
        id: diff
        run: |
          git fetch origin main
          if [ "${{ github.event_name }}" = "pull_request" ]; then
            BASE_SHA="${{ github.event.pull_request.base.sha }}"
            HEAD_SHA="${{ github.event.pull_request.head.sha }}"
          else
            BASE_SHA="origin/main"
            HEAD_SHA="HEAD"
          fi
          git diff --unified=0 "$BASE_SHA"..."$HEAD_SHA" > diff.patch
          echo "diff_path=diff.patch" >> "$GITHUB_OUTPUT"
          if [ -s diff.patch ]; then
            echo "empty_diff=false" >> "$GITHUB_OUTPUT"
          else
            echo "empty_diff=true" >> "$GITHUB_OUTPUT"
          fi

      # 2️⃣ Call the model with the diff as context
      - name: Ask model to update docs
        id: ai
        if: steps.diff.outputs.empty_diff == 'false'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DIFF: ${{ steps.diff.outputs.diff_path }}
        run: |
          BODY=$(jq -Rs '{messages:[{role:"system",content:"You are an expert technical writer."},{role:"user",content:"Update the documentation in docs.md to reflect this diff:\n\n'"$(cat "$DIFF")"'\n\nReturn the updated content for docs.md file only."}], model:"openai/gpt-4o"}' "$DIFF")
          curl -s https://models.github.ai/inference/chat/completions \
               -H "Authorization: Bearer $GITHUB_TOKEN" \
               -H "Content-Type: application/json" \
               -d "$BODY" > response.json
          jq -r '.choices[0].message.content' response.json > docs.md

      # 3️⃣ Detect whether docs.md changed
      - name: Detect changes
        id: changes
        run: |
          if git diff --quiet -- docs.md; then
            echo "No changes to docs.md"
            echo "has_changes=false" >> "$GITHUB_OUTPUT"
          else
            echo "Changes detected in docs.md"
            echo "has_changes=true" >> "$GITHUB_OUTPUT"
          fi

      # 4️⃣ Create or update a PR
      - name: Create pull request
        id: cpr
        if: steps.changes.outputs.has_changes == 'true'
        uses: peter-evans/create-pull-request@v5
        with:
          commit-message: "docs: automated update via LLM"
          title: "docs: AI-generated update"
          body: |
            This PR was generated automatically from changes in ${{ github.ref }}.
            Please review before merging.
          add-paths: |
            docs.md
          branch: docs/update-${{ github.run_id }}
          base: main
          draft: false   # you can set to true if you want it as a draft

  # 5️⃣ Optional: block until a reviewer OKs 
  require-approval:
    needs: generate-docs
    runs-on: ubuntu-latest
    environment: docs-review          # <- configure this env with *Required reviewers*
    steps:
      - run: echo "Docs were generated; waiting for approval to proceed."
